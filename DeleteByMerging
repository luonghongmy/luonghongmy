public void deleteByMerging(int x) {
        if (root == null) {
            return;
        }
        Node f, p;
        p = root;
        f = null;

//////////Xu li ROOT///////////////
        if (root.info == x) {
            if (root.left == null) {
                root = root.right;
                return;
            }
            root = f = root.left;
            p = p.right;
            while (f.right != null) {
                f = f.right;
            }
            f.right = p;
            return;
        }
        //////////////////////////////////////////
        while (p != null) {
            f = p;
            if (x < p.info) {
                p = p.left;
            } else {
                p = p.right;
            }
            if(p == null) return;
            if (p.info == x) {

      //////can Xoa la La
                if (p.left == null && p.right == null) {
                    if (x < f.info) {
                        f.left = null;
                    } else {
                        f.right = null;
                    }
                    return;
                }

                //can Xoa co 1 con
                if (p.left == null || p.right == null) {
                    if (x < f.info) {
                        if (p.left == null) {
                            f.left = p.right;
                        } else {
                            f.left = p.left;
                        }
                        return;
                    } else {
                        if (p.left == null) {
                            f.right = p.right;
                        } else {
                            f.right = p.left;
                        }
                        return;
                    }
                } else {

                //can Xoa co 2 con
                    Node run = p.left;
                    while (run.right != null) {
                        run = run.right;
                    }
                    run.right = p.right;
                    if (x < f.info) {
                        f.left = p.left;
                    } else {
                        f.right = p.left;
                    }
                    return;
                }
            }
        }
    }
